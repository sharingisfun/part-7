{"title":"Oracle ADF Enterprise Application Development Made Simple (Secon","uid":10597274,"size":10021351,"categoryP":"other","categoryS":"e_books","magnet":"?xt=urn:btih:a8cf197afa96227adf1ceedd3c70335610cd5851&amp;dn=Oracle+ADF+Enterprise+Application+Development+Made+Simple+%28Secon&amp;tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80&amp;tr=udp%3A%2F%2Fopen.demonii.com%3A1337&amp;tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&amp;tr=udp%3A%2F%2Fexodus.desync.com%3A6969","seeders":5,"leechers":0,"uploader":"AUDI-A4","files":1,"time":1405870578,"description":"\n\n[b]Table of Contents\nPreface\n[color=orange]Chapter 1: The ADF Proof of Concept\nChapter 2: Estimating the Effort\nChapter 3: Getting Organized\nChapter 4: Productive Teamwork\nChapter 5: Preparing to Build\nChapter 6: Building the Enterprise Application\nChapter 7: Testing Your Application\nChapter 8: Changing the Appearance\nChapter 9: Customizing Functionality\nChapter 10: Securing Your ADF Application\nChapter 11: Packaging and Delivery\nAppendix: Internationalization[/color]\nIndex\nPreface\nUp\n[color=orange]Chapter 1: The ADF Proof of Concept\nUnderstanding the architecture of ADF[/color]\nEnterprise architecture\nThe frontend part\nThe backend part\nThe ADF architecture\nEntity objects and associations\nView objects and view links\nApplication modules\nThe ADF user interface\nADF Task Flows\nADF pages and fragments\nThe Proof of Concept\nContent of a Proof of Concept\nMaking the technology work\nDetermining the development speed\nThe Proof of Concept deliverables\nThe Proof of Concept case study\nUse cases\nUC008 Task Overview and Edit\nUC104 Person Task Timeline\nData model\nGetting started with JDeveloper\nThe JDeveloper window and panels\nSetting JDeveloper preferences\nThe Proof of Concept ADF Business Components\nCreating a connection\nEntity objects for the Proof of Concept\nBuilding associations for the Proof of Concept\nBuilding view objects and view links for the Proof of Concept\nCreating view objects for value lists\nCreating a view object for tasks\nBuilding an application module for tasks\nCreating view objects for scheduling\nBuilding an application module for scheduling\nThe Proof of Concept ADF user interface\nADF Task Flows\nThe tasks page\nCreating the tasks page\nRunning the initial tasks page\nRefining the tasks page\nFixing the bindings\nRunning the tasks page with parameters\nAdding database operations\nRunning the tasks page with database operations\nThe scheduled tasks page\nAdding the Gantt component\nNavigation\nSummary\nUp\n[color=orange]Chapter 2: Estimating the Effort\nGathering requirements[/color]\nBuilding it just like the old system\nUse cases\nUser stories\nNon-functional requirements\nRequirement lists\nScreen design\nDeciding how to build it\nDeciding how much to build at a time\nDeciding how much to build yourself\nDeciding how to integrate\nApplication architecture\nExample Work Breakdown Structure\nEstimating the solution\nTop-down estimate\nBottom-up estimate\nThree-point estimates\nGrouping Ã¢â‚¬â€œ simple, normal, and hard\nMore input, better estimates\nAdding it all up Ã¢â‚¬â€œ the final estimate\nSwings and roundabouts\nCalculating the standard deviation for a task\nCalculating the standard deviation for a project\nSanity check\nFrom effort to calendar time\nSummary\nUp\n[color=orange]Chapter 3: Getting Organized\nSkills required for an ADF project[/color]\nADF framework knowledge\nObject-oriented programming\nJava programming\nDatabase design and programming\nXML knowledge\nWeb technologies\nRegular expressions\nGraphics design\nUsability\nTesting\nOrganizing the team\nProject manager\nSoftware architect and lead programmer\nRegular programmers\nBuilding Business Components\nBuilding the user interface\nSkinning\nTemplates\nDefining data validation\nBuilding support classes\nBuilding database stored procedures\nBuild/configuration manager\nDatabase and application server administrator\nGraphic designers\nUsability experts\nQuality assurance, test manager, and tester\nData modelers\nUsers\nGathering the tools\nSource control\nBug/issue tracking\nCollaboration\nShared documents\nDiscussion forums\nOnline chat\nTest and requirement management\nAutomated build system\nStructuring workspaces, projects, and code\nUsing projects\nSimple architecture\nModular architecture\nApplication Common Workspace\nDatabase workspace\nSubsystem workspaces\nMaster workspace\nEnterprise architecture\nEnterprise Common Workspace\nMaster application workspaces\nNaming conventions\nGeneral\nJava packages\nProject code\nEnterprise Common Code\nDatabase objects\nADF elements\nFile locations\nTest code\nSummary\nUp\n[color=orange]Chapter 4: Productive Teamwork\nThe secret of productivity[/color]\nMore pixels give better productivity\nVersion control\nAvoiding spreadsheets\nSplit your project into tasks\nFocus\nIntegrate your tools\nVersion control with Subversion\nEffective Subversion\nHandling new files\nStarting with Subversion\nWorking with Subversion\nGetting a new copy\nGetting other people's changes\nAutomatic merge\nHandling conflicts\nVersion control with Git\nEffective Git\nStaging and committing\nPreparing your local repository\nInitial load of a workspace\nWorking with Git\nStarting the day\nStarting work on a task\nCommitting often to a task\nCompleting a task\nEnding the day\nHandling conflicts\nAvoiding conflicts\nFocusing for maximum productivity\nThe Integrated Solution Ã¢â‚¬â€œ Oracle Team Productivity Center\nInstalling the server\nConnecting JDeveloper to repositories\nAdministration tasks\nWorking with Oracle Team Productivity Center\nWorking with work items\nFinding work items\nSetting the active work item\nLinking work items\nTagging work items\nSaving and restoring context\nCode reviews\nViewing build status\nChat\nReading news\nSummary\nUp\n[color=orange]Chapter 5: Preparing to Build\nCreating common workspaces[/color]\nWorking with task flow templates\nCreating a task flow template\nContents of your task flow template\nAn exception handler\nInitializers and finalizers\nCreating several levels of templates\nWorking with page templates\nCreating a page template\nUsing layout containers\nWorking with facets\nDefining template facets\nUnderstanding component facets\nDefining template attributes\nAdding content to the page template\nFramework extension classes\nUnderstanding how Java classes are used in ADF\nSome Java required\nThe place for framework extension classes\nCreating framework extension classes\nUsing framework extension classes\nPackaging your common code\nSummary\nUp\n[color=orange]Chapter 6: Building the Enterprise Application\nStructuring your code[/color]\nUsing workspaces\nThe workspace hierarchy\nCreating a workspace\nWorking with ADF Libraries\nThe ADF Library workflow\nUsing ADF Libraries\nBuilding the Common Model\nUse framework extension classes\nEntity objects\nPrimary key generation\nBusiness rules\nUser interface strings\nCommon View objects\nTesting the Common Model\nExporting an ADF Library\nOrganizing the work\nPreconditions\nDevelopment tasks\nCreating Business Components\nBuilding view objects, view links, and the application module\nImplementing Business Logic\nTesting your Business Components\nCreating task flows\nReviewing the task flows\nCreating the page fragments\nImplementing UI logic\nDefining the UI test\nReviewing the UI test\nImplementing the task management subsystem\nSetting up a new workspace\nGetting the libraries\nCreating Business Components\nStarting work\nBuilding the main view object\nBuilding the application module\nTesting your Business Components\nChecking in your code\nFinishing the tasks\nCreating the task flow\nCreating the page fragment\nData table\nSearch panel\nFixing the bindings\nRunning the page\nOK and Cancel buttons\nChecking in your code\nDeploying the task management subsystem\nImplementing the scheduling subsystem\nSetting up a new workspace\nGetting the libraries\nCreating Business Components\nBuilding the persons' view object\nBuilding the tasks view object\nBuilding the master-detail link\nBuilding the MinMaxDate view object\nBuilding the application module\nTesting your Business Components\nFinishing the tasks\nBuilding the task flow\nBuilding the page\nAdding a Gantt chart component\nDefining the start and end time\nRunning the page\nChecking in your code\nDeploying your scheduling subsystem\nBuilding the master application\nSetting up the master workspace\nGetting the libraries\nCreating the master page\nCreating the layout\nAdding the menu\nCreating a dynamic region\nUnderstanding the dynamic region\nAdditional code for task flow switching\nStoring the selected task flow value\nAccessing the session bean from the backing bean\nSetting up the task flow values\nMaking the region redraw itself\nChecking in your code\nSummary\nUp\n[color=orange]Chapter 7: Testing Your Application\nInitial tests[/color]\nWorking with JUnit\nUsing JUnit to test code\nWriting good unit tests\nThe unit testing ADF applications\nPreparing for unit testing\nSetting up a test project\nAdding default testing\nThe real unit testing example\nAdding a test case\nImplementing logical delete\nRe-testing\nAutomating unit testing\nUser interface tests\nWhat should you test?\nAbout Selenium\nInstalling Selenium IDE\nA simple test with Selenium\nExporting your test\nUsing Selenium effectively\nValue checking options\nLazy content delivery\nTesting the context menus\nVerifying the item ID\nTesting passivation and activation\nStress and performance tests\nWorking with JMeter\nTesting application performance with JMeter\nInstalling and running JMeter\nA simple test with JMeter\nSetting up JMeter as a proxy\nRecording a session\nPost-processing a recorded session\nRunning a recorded session\nTroubleshooting JMeter sessions\nThe Oracle alternative\nSummary\nUp\n[color=orange]Chapter 8: Changing the Appearance\nControlling appearance[/color]\nThe Cascading Style Sheets basics\nStyling individual components\nBuilding a style\nInlineStyle and ContentStyle\nUnravelling the mysteries of CSS styling\nConditional formatting\nSkinning overview\nSkinning capabilities\nSkinning recommendations\nThe skinning process\nCreating a skin project\nSkinning in practice\nCreating a skin CSS file\nWorking in the Design tab\nWorking in the Selectors tab\nStyle Classes\nGlobal Selector Aliases\nAt-Rules\nFaces Component Selectors\nData Visualizations Component Selectors\nFinding the selector at runtime\nOptionally providing images for your skin\nOptionally creating a resource bundle for your skin\nPackaging the skin\nUsing the skin\nSummary\nUp\n[color=orange]Chapter 9: Customizing Functionality\nThe reason for customization[/color]\nThe technology behind ADF customization\nApplying customization layers\nMaking an application customizable\nDeveloping customization classes\nBuilding the classes\nImplementing the methods\nDeploying the customization classes\nEnabling seeded customization\nLinking the customization class to the application\nConfiguring customization layers\nUsing resource bundles\nAllowing resource bundle customization\nPerforming customization\nSelecting the customization role\nCustomizing Business Components\nCustomizing pages\nCustomizing strings\nElements that cannot be customized\nSummary\nUp\n[color=orange]Chapter 10: Securing Your ADF Application\nThe security basics[/color]\nAuthentication means knowing your user\nAuthorization means deciding on access\nThe Oracle security solution\nAlternative security\nSecurity decisions\nPerforming authentication\nPerforming authorization\nWhere to implement security\nImplementing ADF Security\nSelecting a security model\nSelecting the authentication type\nSelecting how to grant access\nSelect a common welcome page\nApplication roles\nImplementing the user interface security\nSecuring task flows\nSecuring pages\nUsing entitlements\nImplementing data security\nDefining protected operations\nProtecting an entity object\nProtecting an attribute\nGranting operations to roles\nUsers and groups\nMapping the application to the organization\nExample users and enterprise roles\nAssigning application roles\nRunning the application\nRemoving inaccessible items\nSummary\nUp\n[color=orange]Chapter 11: Packaging and Delivery\nThe contents of a good deployment package[/color]\nThe runnable application\nDatabase code\nInstallation and operation instructions\nPreparing for deployment\nCleaning up your code\nTest users and groups\nOther development artifacts\nPerforming code audit\nIgnoring rules\nChecking more rules\nSetting application parameters for production use\nApplication module tuning\nControlling database locking\nTuning your ADF application\nSetting up the application server\nNumber of servers\nInstalling WebLogic 12c standalone for ADF\nCreating a data source on the server\nDeploying the application\nDirect deployment\nCreating an application server connection\nDeploying your application directly\nDeploying the file through the console\nCreating the EAR file\nDeploying the EAR file\nScripting the build process\nCreating a build task\nCreating a build task for the master project\nCreating build tasks for ADF Libraries\nCreating a build task for the master application\nMoving your task to the test/integration server\nAdding a checkout\nAdding the database\nMore scripting\nAutomation\nSummary\nUp\nAppendix: Internationalization\nAutomatic internationalization\nHow localizable strings are stored\nDefining localizable strings\nPerforming the translation\nRunning your localized application\nTesting the localized Business Components\nTesting the localized user interface\nLocalizing formats\nMore internationalization\nSummary\nUp\nIndex[/b]","torrent":{"xt":"urn:btih:a8cf197afa96227adf1ceedd3c70335610cd5851","amp;dn":"Oracle+ADF+Enterprise+Application+Development+Made+Simple+%28Secon","amp;tr":["udp%3A%2F%2Ftracker.openbittorrent.com%3A80","udp%3A%2F%2Fopen.demonii.com%3A1337","udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969","udp%3A%2F%2Fexodus.desync.com%3A6969"],"infoHash":"a8cf197afa96227adf1ceedd3c70335610cd5851","infoHashBuffer":{"type":"Buffer","data":[168,207,25,122,250,150,34,122,223,28,238,221,60,112,51,86,16,205,88,81]},"announce":[],"urlList":[]}}