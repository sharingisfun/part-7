{"title":"Effective Programming - More Than Writing Code V413HAV","uid":8202017,"size":9992469,"categoryP":"other","categoryS":"e_books","magnet":"?xt=urn:btih:86421f81e09e2e8e16de3c073ea11c9fb363cb8d&amp;dn=Effective+Programming+-+More+Than+Writing+Code+V413HAV&amp;tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80&amp;tr=udp%3A%2F%2Fopen.demonii.com%3A1337&amp;tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&amp;tr=udp%3A%2F%2Fexodus.desync.com%3A6969","seeders":5,"leechers":0,"uploader":"V413HAV","files":-1,"time":1362040695,"description":"Effective Programming - More Than Writing Code\n\nV413HAV\n\nFor More Quality Uploads :\n\nThe Piratebay : https://thepiratebay.se/user/V413HAV/\n\nPage Address And E-Mail ID In Read Me.txt\n\nSupport The Developers. If You Like It, Buy It.\n\n\n     ||     ||    ||||||| TM\n   ||||     ||         ||\n  || ||     ||         ||\n ||  ||     ||    |||||||\n||||||||||  ||         ||\n     ||     ||         ||\n     ||     ||    |||||||\n\nFormats: EPUB, PDF\n\nABOUT THE BOOK\n\nJeff Atwood began the Coding Horror blog in 2004, and is convinced that it changed his life. He needed a way to keep track of software development over time - whatever he was thinking about or working on. He researched subjects he found interesting, then documented his research with a public blog post, which he could easily find and refer to later. Over time, increasing numbers of blog visitors found the posts helpful, relevant and interesting. Now, approximately 100,000 readers visit the blog per day and nearly as many comment and interact on the site.\n\nEffective Programming: More Than Writing Code is your one-stop shop for all things programming. Jeff writes with humor and understanding, allowing for both seasoned programmers and newbies to appreciate the depth of his research. From such posts as &quot;The Programmer's Bill of Rights&quot; and &quot;Why Cant Programmers... Program?&quot; to &quot;Working With the Chaos Monkey,&quot; this book introduces the importance of writing responsible code, the logistics involved, and how people should view it more as a lifestyle than a career.\n\nTABLE OF CONTENTS\n\n- Introduction\n- The Art of Getting Shit Done\n- Principles of Good Programming\n- Hiring Programmers the Right Way\n- Getting Your Team to Work Together\n- The Batcave: Effective Workspaces for Programmers\n- Designing With the User in Mind\n- Security Basics: Protecting Your Users' Data\n- Testing Your Code, So it Doesn't Suck More Than it Has To\n- Building, Managing and Benefiting from a Community\n- Marketing Weasels and How Not to Be One\n- Keeping Your Priorities Straight\n\nEXCERPT FROM THE BOOK\n\nAs a software developer, you are your own worst enemy. The sooner you realize that, the better off you'll be.I know you have the best of intentions. We all do. We're software developers; we love writing code. It's what we do. We never met a problem we couldn't solve with some duct tape, a jury-rigged coat hanger and a pinch of code. But Wil Shipley argues that we should rein in our natural tendencies to write lots of code:\n\nThe fundamental nature of coding is that our task, as programmers, is to recognize that every decision we make is a trade-off. To be a master programmer is to understand the nature of these trade-offs, and be conscious of them in everything we write.In coding, you have many dimensions in which you can rate code: Brevity of codeFeaturefulnessSpeed of executionTime spent codingRobustnessFlexibility\n\nNow, remember, these dimensions are all in opposition to one another. You can spend three days writing a routine which is really beautiful and fast, so you've gotten two of your dimensions up, but you've spent three days, so the &quot;time spent coding&quot; dimension is way down.So, when is this worth it? How do we make these decisions? The answer turns out to be very sane, very simple, and also the one nobody, ever, listens to: Start with brevity. Increase the other dimensions as required by testing.\n\nI couldn't agree more. I've given similar advice when I exhorted developers to Code Smaller. And I'm not talking about a reductio ad absurdum contest where we use up all the clever tricks in our books to make the code fit into less physical space. I'm talking about practical, sensible strategies to reduce the volume of code an individual programmer has to read to understand how a program works. Here's a trivial little example of what I'm talking about:\n\nif (s == String.Empty)if (s == &quot;&quot;)\n\nIt seems obvious to me that the latter case is\n\nProduct Details\nFile Size: 5541 KB\nPrint Length: 279 pages\nPage Numbers Source \nISBN: 147830054X\nSimultaneous Device Usage: Unlimited\nPublisher: Hyperink - Guide to Effective Programming (July 4, 2012)\nSold by: Amazon Digital Services, Inc.\nLanguage: English\n","torrent":{"xt":"urn:btih:86421f81e09e2e8e16de3c073ea11c9fb363cb8d","amp;dn":"Effective+Programming+-+More+Than+Writing+Code+V413HAV","amp;tr":["udp%3A%2F%2Ftracker.openbittorrent.com%3A80","udp%3A%2F%2Fopen.demonii.com%3A1337","udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969","udp%3A%2F%2Fexodus.desync.com%3A6969"],"infoHash":"86421f81e09e2e8e16de3c073ea11c9fb363cb8d","infoHashBuffer":{"type":"Buffer","data":[134,66,31,129,224,158,46,142,22,222,60,7,62,161,28,159,179,99,203,141]},"announce":[],"urlList":[]}}